function fn1 () {
	var a = 2;
	return function fn2 () {
		a++;
		console.log(a)
	}
}

// fn1()  // 如果光执行fn1，则fn1的整个声明周期就结束了，被gc回收

var f = fn1();   // 将fn2的地址引用指向了f, 所以 fn2 里的 a 还存在于内存中

f() // 3
f() // 4

优点：函数内部的变量在函数执行后，仍然存活在内存中
	在函数外部可以操作到函数内部的数据
缺点：非常耗内存，没有被回收，可能会导致内存溢出

处理方法：赋值为null ：f = null，f 没有引用地址了，fn1没有用了，fn1 被回收